{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState('Select Your Choice'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectValue = _useState4[0],\n      setSelectValue = _useState4[1];\n\n  return _jsxs(View, {\n    style: {\n      marginVertical: 20,\n      marginHorizontal: 20\n    },\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: \"Press the button below to continue to the MCQ section.\"\n      }), _jsx(View, {\n        style: {\n          marginVertical: 10,\n          marginTop: 40\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setShowModal(true);\n          },\n          style: {\n            height: 40,\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: 8,\n            borderWidth: 1,\n            borderColor: 'limegreen'\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'limegreen',\n              fontSize: 20\n            },\n            children: \"Select Exam Type\"\n          })\n        })\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: false,\n      visible: showModal,\n      presentationStyle: \"pageSheet\",\n      children: _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(View, {\n          style: {\n            justifyContent: 'flex-end',\n            alignItems: 'flex-end',\n            marginVertical: 10,\n            marginHorizontal: 10\n          },\n          children: _jsx(TouchableOpacity, {\n            style: {\n              width: 70,\n              justifyContent: 'center',\n              alignItems: 'center',\n              padding: 5\n            },\n            onPress: function onPress() {\n              return setShowModal(false);\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                color: 'tomato'\n              },\n              children: \"Cancel\"\n            })\n          })\n        }), _jsxs(Picker, {\n          selectedValue: selectValue,\n          onValueChange: function onValueChange(value) {\n            return setSelectValue(value);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"English\",\n            value: \"English\"\n          }), _jsx(Picker.Item, {\n            label: \"GK\",\n            value: \"GK\"\n          }), _jsx(Picker.Item, {\n            label: \"Reasoning\",\n            value: \"Reasoning\"\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["D:/july/react-native/e_learning/screens/home/index.js"],"names":["React","useState","HomeScreen","navigation","showModal","setShowModal","selectValue","setSelectValue","marginVertical","marginHorizontal","fontSize","marginTop","height","justifyContent","alignItems","borderRadius","borderWidth","borderColor","color","flex","width","padding","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Modal, Picker, TouchableOpacity } from 'react-native';\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n\r\n    let [showModal, setShowModal] = useState(false)\r\n    let [selectValue, setSelectValue] = useState('Select Your Choice')\r\n\r\n    return(\r\n        <View style={{marginVertical:20, marginHorizontal:20}}>\r\n        <View>\r\n            <Text style={{fontSize:20}}>Press the button below to continue to the MCQ section.</Text>\r\n            <View style={{marginVertical:10,marginTop:40}}>\r\n                <TouchableOpacity onPress={() => setShowModal(true)} style={{\r\n                height:40,justifyContent: 'center', alignItems: 'center',borderRadius:8,borderWidth:1,\r\n                borderColor:'limegreen'\r\n                }}>\r\n                    <Text style={{color:'limegreen',fontSize:20}}>Select Exam Type</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        <Modal\r\n            animationType=\"slide\"\r\n            transparent={false}\r\n            visible={showModal}\r\n            presentationStyle='pageSheet'\r\n        >\r\n            <View style={{flex:1}}>\r\n                <View style={{justifyContent: 'flex-end',alignItems: 'flex-end',marginVertical:10,marginHorizontal:10}}>\r\n                    <TouchableOpacity style={{width:70,justifyContent:'center',alignItems:'center',\r\n                    padding:5}} onPress={() => setShowModal(false)}>\r\n                        <Text style={{fontSize:20, color:'tomato'}}>Cancel</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <Picker selectedValue={selectValue} onValueChange={(value) => setSelectValue(value)}>\r\n                    <Picker.Item label=\"English\" value=\"English\"  />\r\n                    <Picker.Item label=\"GK\" value=\"GK\" />\r\n                    <Picker.Item label=\"Reasoning\" value=\"Reasoning\" />\r\n                </Picker>\r\n            </View>\r\n        </Modal>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default HomeScreen"]},"metadata":{},"sourceType":"module"}